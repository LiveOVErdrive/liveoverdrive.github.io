class MapGenerator {
    static generateTestMap() {
        return [
            "4444444444444444444444444444444444444444",
            "4444444444444444444444444444444444444444",
            "3333333333333333333333333333333333333333",
            "4444444344444444444444444444444444444444",
            "4444444344444444444444444444444444444444",
            "4444444344444444444444444444444444444444",
            "4444444344444444444444444444444444444444",
            "4444444344444444444444444444444444444444",
            "0000000100000000000000000000000000000000",
            "0111111111111110000000011111110000000000",
            "0111111111111110000000011111110000000000",
            "0111111111111111111111111111110000000000",
            "0111111111111110000000011111110000000000",
            "0111111111111110000000011111110000000000",
            "0111111111111110000000000010000000000000",
            "0000000000000000000000000010000000000000",
            "0000000000000000000000000010000000000000",
            "0000000000000000000000000010000000000000",
            "0000000000000000000000000010000000000000",
            "0000000000000000000000000010000000000000",
            "0000000000000000000000011111110000000000",
            "0000000000000000000000011111110000000000",
            "0000000000000000000000011111110000000000",
            "0000000000000000000000011111110000000000",
            "0000000000000000000000011111110000000000",
            "0000000000000000000000011111110000000000",
            "0000000000000000000000011111110000000000",
            "0000000000000000000000000000000000000000",
        ]
    }

    static generateDungeonLevel() {
        const maxDim = 10
        let xmax = 0
        let ymax = 0
        let rooms = [
            XYCoord(0,0)
        ]
        for (let x=0; x<10; x++) {
            let sourceRoom = rooms[Util.randInt(rooms.length-1)]
            const possibleRooms = []
            for (dir in Directions.asList()) {
                const targetRoom = sourceRoom.plus(dir)
                if (targetRoom.x < maxDim && targetRoom.x >= 0
                    && targetRoom.y < maxDim && targetRoom.y >= 0) {
                    for (room in rooms) {
                        if (!targetRoom.equals(room)) {
                            possibleRooms.push(targetRoom)
                        }
                    }
                }
            }
            const newRoom = possibleRooms[Util.randInt(possibleRooms.length-1)]
            if (newRoom.x > xmax) { xmax = newRoom.x}
            if (newRoom.y > ymax) { ymax = newRoom.y}
            rooms.push(newRoom)
        }
    }
}